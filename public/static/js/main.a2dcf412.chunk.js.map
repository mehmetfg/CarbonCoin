{"version":3,"sources":["logo.svg","constants/contract.js","lib/web3Modal.js","redux/constant/actionTypes.js","redux/reducers/tokenReducer.js","redux/reducers/evmReducer.js","redux/reducers/assetReducer.js","redux/reducers/transactionReducer.js","redux/reducers/powerStationReducer.js","redux/reducers.js","redux/store.js","redux/actions/assetAction.js","redux/actions/evmAction.js","helpers/web3.js","lib/fetcher.js","lib/responses.js","redux/actions/transactionAction.js","redux/actions/tokenAction.js","redux/actions/powerStationAction.js","view/TransListView.js","helpers/api.js","view/PrivateSale.js","view/TransList.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["CYCE_CONTRACT","address","symbol","decimals","image","abi","getWeb3Modal","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","TokenActionTypes","EvmActionTypes","AssetActionTypes","TransactionActionTypes","PowerStationActionTypes","INITIAL_STATE","token","tokens","evm","asset","ethBalance","tokenBalance","transaction","transactions","powerStation","powerStations","reducers","combineReducers","tokenReducer","state","action","type","T","payload","console","log","map","item","id","filter","evmReducer","assetReducer","transactionReducer","powerStationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","initAsset","dispatch","a","getAccountAssets","data","initEvm","connectToEvm","removeEvm","resetWeb3Provider","web3","provider","web3Modal","connect","Web3","eth","getAccounts","accounts","net","getId","networkId","getChainId","chainId","subscribeProvider","toast","getTokenContract","contractId","getState","Contract","main_abi","owner_address","callTransfer","Promise","resolve","reject","contract","methods","transfer","parseFloat","quentity","send","from","err","then","status","transactionHash","callBuyToken","buyToken","addTokenToWallet","sendAsync","method","params","Math","round","random","added","getBalanceOfEth","undefined","getBalance","response","utils","fromWei","balance","waitForReceipt","hash","getTransactionReceipt","sonuc","window","setTimeout","clearCachedProvider","on","fetcher","axios","create","baseURL","Accept","successHandler","s","success","Swal","fire","errorHandler","e","message","location","href","messages","Object","values","errors","toString","url","initTransactions","get","res","updateTransaction","history","put","selectToken","selectPowerStation","TransListView","useDispatch","useParams","useSelector","useState","transferStatus","setTransferStatus","loading","update","render","isLoading","autoClose","catch","error","position","paid","setPaid","unpaid","setUnpaid","useEffect","totalUnpaid","setTotalUnpaid","totalPaid","setTotalPaid","totalTransaction","setTotalTransaction","sum","reduce","prev","current","sumPaid","sumUnPaid","className","width","height","scope","index","period","Moment","date","format","Date","parse","now","onClick","getEthToUsdtExchangeRate","getGasPrice","PrivateSale","fetching","setTransaction","price","mail","name","inputValue","setInputValue","gasPrice","setGasPrice","ethToUsdt","setEthToUsdt","coinToToken","netEth","ethResult","exchangeRate","title","html","icon","isNaN","isFinite","ethGwei","fastest","toWei","addTransaction","post","handleChange","event","target","value","placeholder","onChange","disabled","onBlur","style","background","color","toFixed","ethereum","TransList","role","length","Routes","path","component","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","i18next","init","interpolation","escapeValue","lng","resources","en","common","common_en","de","common_tr","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2dcf412.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const CYCE_CONTRACT={\n    1:{\n        address: '0x35bd9c09eed5c8eea5befddf0489bbd1e36c5155',\n        symbol: 'CYCE',\n        decimals: '6',\n        image: '',\n        abi: [{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n    },\n\n    2: {\n            address: '0xb51878Ce978427F6a4b847D80E47FDFB3958186a',\n        abi: [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cyceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cyceToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"geUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n    }\n}\n\n\n","import Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nconst getWeb3Modal = () => {\r\n\r\n        const web3ModalInstance = new Web3Modal({\r\n            network: 'mainnet',\r\n            cacheProvider: true,\r\n            providerOptions: {\r\n                walletconnect: {\r\n                    package: WalletConnectProvider,\r\n                    options: {\r\n                        // Mikko's test key - don't copy as your mileage may vary\r\n                        infuraId: \"89a1a674afc246438074d9511e192823\",\r\n                    }\r\n                },\r\n                /*  fortmatic: {\r\n                      package: Fortmatic,\r\n                      options: {\r\n                          // Mikko's TESTNET api key\r\n                          key: \"pk_test_391E26A3B43A3350\"\r\n                      }\r\n                  }*/\r\n            }\r\n\r\n        })\r\n\r\n    return web3ModalInstance;\r\n}\r\n\r\nexport default getWeb3Modal;","\nexport  const WalletActionTypes = {\n    INIT_WALLETS             :   'INIT_WALLETS',\n    SELECT_WALLET            :   'SELECT_WALLET',\n    REMOVE_SELECTED_WALLET   :   'REMOVE_SELECTED_WALLET',\n    DELETE_WALLET            :   'DELETE_WALLET',\n    UPDATE_WALLET            :   'UPDATE_WALLET',\n    INSERT_WALLET            :   'INSERT_WALLET'\n}\nexport  const TokenActionTypes = {\n    INIT_TOKENS             :   'INIT_TOKENS',\n    SELECT_TOKEN            :   'SELECT_TOKEN',\n    REMOVE_SELECTED_TOKEN   :   'REMOVE_SELECTED_TOKEN',\n    DELETE_TOKEN            :   'DELETE_TOKEN',\n    UPDATE_TOKEN            :   'UPDATE_TOKEN',\n    INSERT_TOKEN            :   'INSERT_TOKEN'\n}\nexport  const EvmActionTypes = {\n    INIT_EVM                :   'INIT_EVM',\n    REMOVE_EVM              :   'REMOVE_EVM',\n}\n\nexport  const AssetActionTypes = {\n    INIT_ASSET                :   'INIT_ASSET',\n    REMOVE_ASSET             :   'REMOVE_ASSET',\n}\n\nexport  const TransactionActionTypes = {\n    INIT_TRANSACTIONS             :   'INIT_TRANSACTIONS',\n    SELECT_TRANSACTION            :   'SELECT_TRANSACTION',\n    REMOVE_SELECTED_TRANSACTION   :   'REMOVE_SELECTED_TRANSACTION',\n    DELETE_TRANSACTION            :   'DELETE_TRANSACTION',\n    UPDATE_TRANSACTION            :   'UPDATE_TRANSACTION',\n    INSERT_TRANSACTION            :   'INSERT_TRANSACTION'\n}\nexport  const PowerStationActionTypes = {\n    INIT_POWER_STATIONS             :   'INIT_POWER_STATIONS',\n    SELECT_POWER_STATION            :   'SELECT_POWER_STATION',\n    REMOVE_SELECTED_POWER_STATION   :   'REMOVE_SELECTED_POWER_STATION',\n    DELETE_POWER_STATION            :   'DELETE_POWER_STATION',\n    UPDATE_POWER_STATION            :   'UPDATE_POWER_STATION',\n    INSERT_POWER_STATION            :   'INSERT_POWER_STATION'\n}","import {TokenActionTypes as T} from \"../constant/actionTypes\";\n\nconst INITIAL_STATE = {\n    token:{},\n    tokens:[],\n}\n\nexport  const tokenReducer = (state= INITIAL_STATE, action) =>{\n    switch (action.type){\n        case T.INIT_TOKENS  :\n            return {...state, tokens:action.payload};\n        case T.SELECT_TOKEN :\n\n            console.log(action.payload)\n            return {...state, token:action.payload};\n        case T.INSERT_TOKEN :\n            return {\n                ...state,\n                tokens: [...state.tokens, action.payload]\n            };\n        case T.UPDATE_TOKEN :\n            return{\n                ...state,\n                tokens:state.tokens.map(item => item.id===action.payload.id ? action.payload : item)\n            };\n        case T.DELETE_TOKEN :\n            return {\n                ...state,\n                tokens:state.tokens.filter(item => item.id != action.payload)\n            };\n        case T.REMOVE_SELECTED_TOKEN :\n            return {...state, token: {}};\n        default:\n            return state\n    }\n\n}\n","import {EvmActionTypes as T} from \"../constant/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n    evm:false\r\n}\r\n\r\nexport  const evmReducer = (state= INITIAL_STATE, action) =>{\r\n    switch (action.type){\r\n        case T.INIT_EVM  :\r\n            return {...state, evm:action.payload};\r\n        case T.REMOVE_EVM :\r\n            return {...state, evm: false};\r\n        default:\r\n            return state\r\n    }\r\n}","import {AssetActionTypes as T} from \"../constant/actionTypes\";\r\nconst INITIAL_STATE = {\r\n    asset:{\r\n        ethBalance: 0.00,\r\n        tokenBalance: 0.00,\r\n    },\r\n}\r\nexport  const assetReducer = (state= INITIAL_STATE, action) =>{\r\n    switch (action.type){\r\n        case T.INIT_ASSET  :\r\n            return {...state, asset:action.payload};\r\n        case T.REMOVE_ASSET :\r\n            return {...state, asset: INITIAL_STATE};\r\n        default:\r\n            return state\r\n    }\r\n}","import {TransactionActionTypes as T} from \"../constant/actionTypes\";\n\nconst INITIAL_STATE = {\n    transaction:{},\n    transactions:[],\n}\n\nexport  const transactionReducer = (state= INITIAL_STATE, action) =>{\n    switch (action.type){\n        case T.INIT_TRANSACTIONS  :\n            return {...state, transactions:action.payload};\n        case T.SELECT_TRANSACTION :\n\n            console.log(action.payload)\n            return {...state, transaction:action.payload};\n        case T.INSERT_TRANSACTION :\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            };\n        case T.UPDATE_TRANSACTION :\n            return{\n                ...state,\n                transactions:state.transactions.map(item => item.id===action.payload.id ? action.payload : item)\n            };\n        case T.DELETE_TRANSACTION :\n            return {\n                ...state,\n                transactions:state.transactions.filter(item => item.id != action.payload)\n            };\n        case T.REMOVE_SELECTED_TRANSACTION :\n            return {...state, transaction: {}};\n        default:\n            return state\n    }\n\n}\n","import {PowerStationActionTypes as T} from \"../constant/actionTypes\";\n\nconst INITIAL_STATE = {\n    powerStation:{},\n    powerStations:[],\n}\n\nexport  const powerStationReducer = (state= INITIAL_STATE, action) =>{\n    switch (action.type){\n        case T.INIT_POWER_STATIONS  :\n            return {...state, powerStations:action.payload};\n        case T.SELECT_POWER_STATION :\n\n            console.log(action.payload)\n            return {...state, powerStation:action.payload};\n        case T.INSERT_POWER_STATION :\n            return {\n                ...state,\n                powerStations: [...state.powerStations, action.payload]\n            };\n        case T.UPDATE_POWER_STATION :\n            return{\n                ...state,\n                powerStations:state.powerStations.map(item => item.id===action.payload.id ? action.payload : item)\n            };\n        case T.DELETE_POWER_STATION :\n            return {\n                ...state,\n                powerStations:state.powerStations.filter(item => item.id != action.payload)\n            };\n        case T.REMOVE_SELECTED_POWER_STATION :\n            return {...state, powerStation: {}};\n        default:\n            return state\n    }\n\n}\n","import {combineReducers} from \"redux\";\nimport {tokenReducer} from \"./reducers/tokenReducer\";\nimport {evmReducer} from \"./reducers/evmReducer\";\nimport {assetReducer} from \"./reducers/assetReducer\";\nimport {transactionReducer} from \"./reducers/transactionReducer\";\nimport {powerStationReducer} from \"./reducers/powerStationReducer\";\n\nconst reducers = combineReducers({\n    tokenReducer,\n    evmReducer,\n    assetReducer,\n    transactionReducer,\n    powerStationReducer\n})\n\nexport default reducers;\n","import {applyMiddleware, createStore} from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst store = createStore(\n    reducers,composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n\n)\nexport default store\n","import {AssetActionTypes as T} from \"../constant/actionTypes\";\r\nimport {getAccountAssets} from \"../../helpers/web3\";\r\n\r\nexport const initAsset = () => async (dispatch) => {\r\n        const  data =  await getAccountAssets();\r\n\r\n        dispatch({type:T.INIT_ASSET,payload:data})\r\n}\r\nexport const removeAsset = () => async (dispatch) => {\r\n    dispatch({type:T.INIT_ASSET})\r\n}","import {EvmActionTypes as T} from \"../constant/actionTypes\";\r\nimport {connectToEvm, resetWeb3Provider} from \"../../helpers/web3\";\r\n\r\nexport const initEvm = () => async (dispatch) => {\r\n  const data= await connectToEvm()\r\n    dispatch({type:T.INIT_EVM,payload:data})\r\n}\r\nexport const removeEvm = () => async (dispatch) => {\r\n    const data=  await resetWeb3Provider();\r\n    dispatch({type:T.REMOVE_EVM})\r\n}\r\nexport const resetEvm = () => async (dispatch) => {\r\n    dispatch({type:T.REMOVE_EVM})\r\n}","import {CYCE_CONTRACT} from \"../constants/contract\";\nimport Web3 from \"web3\";\nimport getWeb3Modal from \"../lib/web3Modal\";\nimport store from \"../redux/store\";\nimport {toast } from 'react-toastify';\nimport {initAsset} from \"../redux/actions/assetAction\";\nimport {initEvm, removeEvm, resetEvm} from \"../redux/actions/evmAction\";\nimport {evmReducer} from \"../redux/reducers/evmReducer\";\nvar web3={};\nvar address='';\nvar provider={}\nexport const connectToEvm  = async () => {\n    const web3Modal = getWeb3Modal();\n    provider = await  web3Modal.connect();\n    web3= new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    address = accounts[0];\n    const networkId = await  web3.eth.net.getId();\n    const chainId   = await  web3.eth.getChainId()\n    await subscribeProvider(provider,web3,address)\n    store.dispatch(initAsset())\n    toast('Cüzdan Bağlantısı Sağlandı')\n    return {provider, web3, accounts, address, networkId, chainId};\n}\nfunction getTokenContract(web3, contractId) {\n        const state= store.getState();\n        const token = state.tokenReducer.token\n\n    const contract = new web3.eth.Contract(\n        token.main_abi,\n        token.owner_address\n    )\n\n    return contract\n}\nfunction callBalanceOf(web3,address) {\n    return new Promise(async(resolve, reject) => {\n        const contract = getTokenContract(web3, 1)\n        await contract.methods.balanceOf(address)\n            .call(\n                { from: address},\n                (err, data) => {\n                    if (err) {\n                        reject(err)\n                    }\n\n                    resolve(data)\n                }\n            )\n    })\n}\nexport function callTransfer(item) {\n    return new Promise(async(resolve, reject) => {\n        const contract = getTokenContract(web3 ,1)\n        await contract.methods\n            .transfer(item.address, parseFloat(item.quentity))\n            .send({ from: address }, (err, data) => {\n                if (err) {\n\n                    reject(err)\n                }\n\n\n            }).then(function (status){\n\n                resolve(status.transactionHash)\n            })\n    })\n}\n\nexport function callBuyToken(address, web3) {\n    return new Promise(async(resolve, reject) => {\n        const token = getTokenContract(web3)\n        await token.methods\n            .buyToken(address, '1')\n            .send({ from: address }, (err, data) => {\n                if (err) {\n                    reject(err)\n                }\n\n                resolve(data)\n            })\n    })\n}\n\nexport const addTokenToWallet = async (provider) => {\n    provider.sendAsync({\n        method: 'wallet_watchAsset',\n        params: {\n            \"type\": \"ERC20\",\n            \"options\":CYCE_CONTRACT[1],\n        },\n        id: Math.round(Math.random() * 100000),\n    }, (err, added) => {\n        console.log('provider returned', err, added)\n        if (err || 'error' in added) {\n            //Swal.fire(\"Başarısız\", err, \"error\")\n            return\n        }\n        /*  if(added.result) {\n              Swal.fire(\"Başarılı \", \"CYCE Coin Cüzdana Ekleme İşleminiz Başarılı<br/> CYCE Bakiyeniz <br/>\"+cyceBalance, \"success\")\n          }else{\n              Swal.fire(\"Başarısız\", \"CYCE Coin Vazgeçtiniz\", \"error\")\n          }*/\n    })\n\n}\n\nexport const getBalanceOfToken = async (web3, address) =>{\n\n    if (!web3) {\n        return;\n    }\n    if(address !== undefined && address !== '') {\n\n        const contract = await callBalanceOf(web3, address)\n       return (contract/10000000000000000000)\n\n    }\n\n    // const balance =  await web3.utils.fromWei(response);\n    // setTokenBalance(balance);\n    // console.log(tokenBalance)\n\n}\n\nexport const getBalanceOfEth = async (web3, address) =>{\n    if(address !== undefined && address !== '') {\n        const response = await web3.eth.getBalance(address)\n        const balance = await web3.utils.fromWei(response);\n        return balance;\n    }\n}\n\nexport const  waitForReceipt = async (hash, web3) =>  {\n\n    var sonuc= await web3.eth.getTransactionReceipt(hash)\n    let  status=true;\n    if (status) {\n        window.setTimeout(function () {\n            waitForReceipt(hash);\n            if (sonuc !== null) {\n                status=false;\n              return true;\n            }\n        }, 2000);\n    }\n\n}\nexport  const resetWeb3Provider = async () =>{\n\n  /*  if (web3 && web3.currentProvider && web3.currentProvider.close) {\n        await web3.currentProvider.close();\n    }*/\n\n\n\n    const web3Modal = getWeb3Modal();\n     await web3Modal.clearCachedProvider();\n    toast('Cüzdan Bağlantısı Kesildi')\n    store.dispatch(resetEvm())\n\n}\n\n\n\n\n\nconst subscribeProvider = async (provider,web3, address) => {\n\n    if (!provider.on) {\n        return;\n    }\n    provider.on(\"close\", async () =>{\n        console.log(\"close\")\n        await resetWeb3Provider()});\n    provider.on('disconnect', async () => {\n        await resetWeb3Provider()\n        console.log(\"disconnect\")\n\n    });\n    provider.on(\"accountsChanged\", async (accounts) => {\n        console.log(\"accountsChanged\")\n        if(accounts[0]) {\n\n             await getAccountAssets(web3, address);\n        } else {\n            await resetWeb3Provider()\n        }\n    });\n    provider.on(\"chainChanged\", async (chainId) => {\n        /* const {web3} = state;\n         const networkId = await web3.eth.net.getId();\n         await setState({chainId, networkId});*/\n        console.log(\"chainChanged adfasf\")\n        store.dispatch(initAsset())\n    });\n\n    provider.on(\"networkChanged\", async (networkId) => {\n        /*          const {web3} = state;\n                  const chainId = await web3.eth.chainId();\n                  await setState({chainId, networkId});*/\n        console.log(\"networkChanged adfdasf\")\n        store.dispatch(initAsset())\n    });\n};\n\nexport const getAccountAssets = async () => {\n    const  ethBalance    =  await getBalanceOfEth(web3, address);\n    const tokenBalance   = 0// await  getBalanceOfToken(evm.web3, evm.address)\n\n    return {ethBalance}\n    //setEthBalance(ethBalance);\n    //   setTokenBalance(tokenBalance)\n}\n\nexport function watchTokenTransfers(from, to, amount, resolve, data1) {\n    // Instantiate web3 with WebSocketProvider\n\n    // Instantiate token contract object with JSON ABI and address\n    const tokenContract = getTokenContract(web3,1)\n\n    // Generate filter options\n    const options = {\n        filter: {\n            _from:  from,\n            _to:    to,\n            _value: amount\n        },\n        fromBlock: 'latest'\n    }\n\n    // Subscribe to Transfer events matching filter criteria\n    tokenContract.events.Transfer(options, async (error, event) => {\n        if (error) {\n            console.log(error)\n            return\n        }\n       let data=store.getState()\n      store.dispatch(initEvm({\n          ...data.evmReducer.evm,\n          status:true,\n      }));\n\n\n        // console.log('Found incoming Pluton transaction from ' + process.env.WALLET_FROM + ' to ' + process.env.WALLET_TO + '\\n');\n        // console.log('Transaction value is: ' + process.env.AMOUNT)\n        // console.log('Transaction hash is: ' + txHash + '\\n')\n\n        // Initiate transaction confirmation\n        //confirmEtherTransaction(event.transactionHash)\n\n        resolve(data1)\n    })\n}\n\nexport function watchEtherTransfers() {\n    // Instantiate web3 with WebSocket provider\n\n\n    // Instantiate subscription object\n    const subscription = web3.eth.subscribe('pendingTransactions')\n\n    // Subscribe to pending transactions\n    subscription.subscribe((error, result) => {\n        if (error) console.log(error)\n    })\n        .on('data', async (txHash) => {\n            try {\n                // Instantiate web3 with HttpProvider\n                const web3Http = new Web3(process.env.INFURA_URL)\n\n             /*   // Get transaction details\n                const trx = await web3Http.eth.getTransaction(txHash)\n\n                const valid = validateTransaction(trx)\n                // If transaction is not valid, simply return\n                if (!valid) return*/\n\n                console.log('Found incoming Ether transaction from ' + process.env.WALLET_FROM + ' to ' + process.env.WALLET_TO);\n                console.log('Transaction value is: ' + process.env.AMOUNT)\n                console.log('Transaction hash is: ' + txHash + '\\n')\n\n                // Initiate transaction confirmation\n                //confirmEtherTransaction(txHash)\n\n                // Unsubscribe from pending transactions.\n                subscription.unsubscribe()\n            }\n            catch (error) {\n                console.log(error)\n            }\n        })\n}","import axios from \"axios\";\n\nexport const fetcher = axios.create({\n    baseURL: \"http://127.0.0.1:8000/api/\",\n    Accept: 'application/json',\n})\n","import Swal from \"sweetalert2\";\nimport toast from 'react-hot-toast';\n\nexport const successHandler = (s) => {\n    switch (s) {\n        case 'insert':\n            return toast.success(' Kayıt İşlemi Başarılı', '') /*  Swal.fire('Başarılı', 'Kayıt İşlemi Başarılı', 'success')*/\n        case 'update':\n            return toast.success('Güncelleme  İşlemi Başarılı', '')\n        case 'delete':\n            return toast.success('Silme  İşlemi Başarılı', '')\n        default :\n            return Swal.fire('Başarılı')\n    }\n}\nexport const errorHandler = e => {\n    switch (e.response.status) {\n        case 500 :\n            return Swal.fire('Sunucu Hatası ', e.response.data.message, 'error')\n        case 401 :\n            return Swal.fire('Yetki Hatası  ', 'Sunucu Hatası Lütfen Suncunucu Hatası', 'error').then(function (response) {\n                window.location.href = \"/login\";\n            })\n        case 422 :\n            let messages = '<ul> ';\n            Object.values(e.response.data.errors).map((item) => (\n                messages += '<li>' + item.toString() + ' </li> '\n\n            ))\n            return Swal.fire('Hata', messages + ' </ul>')\n\n        case 400 :\n            return 'Url veya parametre ile ilgili sorun '\n        case 404:\n            return 'Sayfa bulunamadı '\n        case 403 :\n            return 'Yetkisi Sayfa Erişimi'\n        case 405 :\n            return Swal.fire('Sunucu Hatası ', e.response.data.message, 'error')\n\n\n    }\n}\n\nexport const confirm = message => {\n    return Swal.fire({\n        showCancelButton: true,\n        title: 'Dikkat',\n        html: message,\n    }).then((result) => {\n        return result\n    })\n\n\n}\n","import {fetcher} from \"../../lib/fetcher\";\nimport {TransactionActionTypes as T} from \"../constant/actionTypes\";\nimport {confirm, errorHandler} from \"../../lib/responses\";\nimport {successHandler} from \"../../lib/responses\";\nimport Swal from \"sweetalert2\";\n\nconst url='/transactions/'\nexport const initTransactions = (address) => async (dispatch) => {\n        const res= await  fetcher.get(url+'power-station/'+address)\n        dispatch({type:T.INIT_TRANSACTIONS,payload:res.data})\n}\nexport const selectTransaction = (id) => async (dispatch) => {\n    const response = await fetcher.get( url+id)\n    dispatch({type:T.SELECT_TRANSACTION, payload:response.data})\n}\n\nexport const insertTransaction = (data, history) => async (dispatch) => {\n    try {\n    const response = await  fetcher.post(url, data)\n    dispatch({type:T.INSERT_TRANSACTION, payload:data})\n       await successHandler('insert')\n        history.goBack()\n    } catch (e) {\n        await errorHandler(e)\n    }\n}\nexport const updateTransaction = (data,history) => async (dispatch) => {\n    try {\n        const response = await fetcher.put(url + data.id, data)\n        dispatch({type: T.UPDATE_TRANSACTION, payload: data})\n        await  successHandler('update')\n//        history.goBack();\n    } catch (e) {\n        await errorHandler(e)\n    }\n\n}\nexport const deleteTransaction = (id) => async (dispatch) => {\n\n    var resultv=await confirm('silmek istediğinize eminmisiniz')\n        if(resultv.isConfirmed) {\n            try {\n                const response = await fetcher.delete(url + id)\n                dispatch({type: T.DELETE_TRANSACTION, payload: id})\n                await successHandler('delete')\n            } catch (e) {\n                await errorHandler(e)\n            }\n\n}\n\n\n}\nexport const removeSelectedTransaction = () => async (dispatch) => {\n    dispatch({type:T.REMOVE_SELECTED_TRANSACTION})\n}\n","import {fetcher} from \"../../lib/fetcher\";\nimport {TokenActionTypes as T} from \"../constant/actionTypes\";\nimport {confirm, errorHandler} from \"../../lib/responses\";\nimport {successHandler} from \"../../lib/responses\";\nimport Swal from \"sweetalert2\";\nconst url='/tokens/'\nexport const initTokens = () => async (dispatch) => {\n        const res= await  fetcher.get(url)\n        dispatch({type:T.INIT_TOKENS,payload:res.data})\n}\nexport const selectToken = (id) => async (dispatch) => {\n    const response = await fetcher.get( url+id)\n    dispatch({type:T.SELECT_TOKEN, payload:response.data})\n}\n\nexport const insertToken = (data, history) => async (dispatch) => {\n    try {\n    const response = await  fetcher.post(url, data)\n    dispatch({type:T.INSERT_TOKEN, payload:data})\n       await successHandler('insert')\n        history.goBack()\n    } catch (e) {\n        await errorHandler(e)\n    }\n}\nexport const updateToken = (data,history) => async (dispatch) => {\n\n    try {\n        const response = await fetcher.put(url + data.id, data)\n        dispatch({type: T.INSERT_TOKEN, payload: data})\n        await  successHandler('update')\n        history.goBack();\n    } catch (e) {\n        await errorHandler(e)\n    }\n\n}\nexport const deleteToken = (id) => async (dispatch) => {\n\n    var resultv=await confirm('silmek istediğinize eminmisiniz')\n        if(resultv.isConfirmed) {\n            try {\n                const response = await fetcher.delete(url + id)\n                dispatch({type: T.DELETE_TOKEN, payload: id})\n                await successHandler('delete')\n            } catch (e) {\n                await errorHandler(e)\n            }\n\n}\n\n\n}\nexport const removeSelectedToken = () => async (dispatch) => {\n    dispatch({type:T.REMOVE_SELECTED_TOKEN})\n}\n","import {fetcher} from \"../../lib/fetcher\";\nimport {PowerStationActionTypes as T} from \"../constant/actionTypes\";\nimport {confirm, errorHandler} from \"../../lib/responses\";\nimport {successHandler} from \"../../lib/responses\";\nimport Swal from \"sweetalert2\";\nconst url='/powerStation/'\nexport const initPowerStations = () => async (dispatch) => {\n        const res= await  fetcher.get(url)\n        dispatch({type:T.INIT_POWER_STATIONS,payload:res.data})\n}\nexport const selectPowerStation = (id) => async (dispatch) => {\n    const response = await fetcher.get( url+id)\n    dispatch({type:T.SELECT_POWER_STATION, payload:response.data})\n}\n\nexport const insertPowerStation = (data, history) => async (dispatch) => {\n    try {\n    const response = await  fetcher.post(url, data)\n    dispatch({type:T.INSERT_POWER_STATION, payload:data})\n       await successHandler('insert')\n        history.goBack()\n    } catch (e) {\n        await errorHandler(e)\n    }\n}\nexport const updatePowerStation = (data,history) => async (dispatch) => {\n\n    try {\n        const response = await fetcher.put(url + data.id, data)\n        dispatch({type: T.INSERT_POWER_STATION, payload: data})\n        await  successHandler('update')\n        history.goBack();\n    } catch (e) {\n        await errorHandler(e)\n    }\n\n}\nexport const deletePowerStation = (id) => async (dispatch) => {\n\n    var resultv=await confirm('silmek istediğinize eminmisiniz')\n        if(resultv.isConfirmed) {\n            try {\n                const response = await fetcher.delete(url + id)\n                dispatch({type: T.DELETE_POWER_STATION, payload: id})\n                await successHandler('delete')\n            } catch (e) {\n                await errorHandler(e)\n            }\n\n}\n\n\n}\nexport const removeSelectedPowerStation = () => async (dispatch) => {\n    dispatch({type:T.REMOVE_SELECTED_POWER_STATION})\n}\n","import {callTransfer, connectToEvm, watchTokenTransfers} from \"../helpers/web3\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initEvm, removeEvm} from \"../redux/actions/evmAction\";\r\nimport {initTransactions, updateTransaction} from \"../redux/actions/transactionAction\";\r\nimport AssetWidget from \"../component/AssetWidget\";\r\nimport {initTokens, selectToken} from \"../redux/actions/tokenAction\";\r\nimport {useParams} from \"react-router\";\r\nimport {initPowerStations, selectPowerStation} from \"../redux/actions/powerStationAction\";\r\nimport Moment from 'moment'\r\nconst TransListView = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {id, address}= useParams();\r\n    const evm =useSelector((state) => state.evmReducer.evm)\r\n    const asset= useSelector((state) => state.assetReducer.asset)\r\n    const transactions = useSelector((state)=> state.transactionReducer.transactions)\r\n    const token = useSelector((state) => state.tokenReducer.token)\r\n\r\n    const [transferStatus, setTransferStatus] = useState({id:1, status:false});\r\n    const transfer = async (item) => {\r\n\r\n    setTransferStatus({id:item.id, status: true})\r\n        const id = toast.loading(\"Lütfen Bekleyiniz..\")\r\n//do something else\r\n\r\n       await  callTransfer(item).then(function (response){\r\n           dispatch(updateTransaction({...item, hash:response, status:1}))\r\n           setTransferStatus({id:item.id, status: true})\r\n           toast.update(id, { render: \"İşlem Başarılı\", type: \"success\", isLoading: false, autoClose:3000 });\r\n       }).catch(error => {\r\n\r\n           setTransferStatus({id:item.id, status: false})\r\n           toast.update(id, { render: \"İşlem İptal Edildi\", type: \"error\", isLoading: false, autoClose:3000, position:'top-left'  });\r\n        })\r\n    }\r\n    const [paid, setPaid] = useState([]);\r\n    const [unpaid, setUnpaid] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(selectPowerStation(id))\r\n        dispatch(initTransactions(address));\r\n        dispatch(selectToken(id))\r\n        return () => {\r\n            dispatch(initTransactions())\r\n        };\r\n    }, []);\r\n\r\n\r\n    const [totalUnpaid, setTotalUnpaid] = useState();\r\n    const [totalPaid, setTotalPaid] = useState();\r\n    const [totalTransaction, setTotalTransaction] = useState();\r\n    useEffect(() => {\r\n        const sum = transactions.map(item => parseFloat(item.quentity)).reduce(function(prev, current) {\r\n            return prev  + current\r\n        }, 0);\r\n        setPaid(transactions.filter(item => item.status==1))\r\n        setUnpaid(transactions.filter(item => item.status==0))\r\n        setTotalTransaction(sum)\r\n\r\n    }, [transactions]);\r\n    useEffect(() => {\r\n\r\n        const sumPaid = paid.map(item => parseFloat(item.quentity)).reduce(function(prev, current) {\r\n            return prev  + current\r\n        }, 0);\r\n        const sumUnPaid = unpaid.map(item => parseFloat(item.quentity)).reduce(function(prev, current) {\r\n            return prev  + current\r\n        }, 0);\r\n        setTotalUnpaid(sumUnPaid)\r\n        setTotalPaid(sumPaid)\r\n    }, [paid, unpaid]);\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer  />\r\n\r\n                                <div className=\"card-header\">\r\n\r\n                                    <h5>Santral</h5><span>Toplam Hakediş </span>\r\n                                    <h5>{totalTransaction} CYCE</h5>\r\n\r\n                                    {/*{evm == false  ?\r\n                                        <button onClick={() =>  dispatch(initEvm())}\r\n                                                className={\"btn btn-primary\"}>Bağlan\r\n                                        </button> :\r\n                                        <button onClick={() => dispatch(removeEvm())}\r\n                                                className={\"btn btn-danger\"}>Bağlantıyı Kes\r\n                                        </button>\r\n                                    }*/}\r\n                                </div>\r\n            <div className={\"row g-2\"}>\r\n                <div className={\"col-md-6\"}>\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"media align-items-center\">\r\n                                <div className=\"media-body right-chart-content\">\r\n                                    <h4>{totalUnpaid} <span className=\"new-box\"> CYCE</span></h4>\r\n                                    <span>Toplam Ödenecek Miktar</span>\r\n                                </div>\r\n                                <div className=\"knob-block text-center\">\r\n                                    <div >\r\n                                        <canvas width=\"65\" height=\"65\"></canvas>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                                <div className={\"card-body pt-0\"}>\r\n                                    <div className=\"apex-chart-container goal-status text-center row\">\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">Dönemi</th>\r\n                                            <th scope=\"col\">Tarihi</th>\r\n                                            <th scope=\"col\">Miktarı</th>\r\n                                            <th scope=\"col\">Durumu</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {unpaid.map((item, index) => (\r\n                                        <tr key={index}>\r\n                                            <th scope=\"row\">{item.id}</th>\r\n                                            <td>{item.period}</td>\r\n                                            <td>{Moment(item.date).format('D.M.y')}</td>\r\n\r\n                                            <td>{item.quentity}</td>\r\n                                            <td>{Date.parse(item.date)<=Date.now() ?\r\n                                                evm == false ? <button\r\n                                                        className={\"btn btn-outline-primary\"}>Ödeme Aşamasında\r\n                                                    </button>\r\n                                                    : (transferStatus.id == item.id ? transferStatus.status : false) ?\r\n                                                    <button className={\"btn btn-default\"}>İşlem Devam\r\n                                                        Ediyor...</button> :\r\n                                                    <button onClick={() => transfer(item)}\r\n                                                            className={\"btn btn-primary\"}>Transfer\r\n                                                    </button>\r\n                                                : <button\r\n                                                    className={\"btn btn-outline-secondary\"}>Süresi Gelmedi\r\n                                                </button>  }\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                </div>\r\n            </div>\r\n                <div className={\"col-md-6\"}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"media align-items-center\">\r\n                                <div className=\"media-body right-chart-content\">\r\n                                    <h4>{totalPaid}<span className=\"new-box\"> CYCE</span></h4>\r\n                                    <span>Toplam Ödenen Miktar</span>\r\n                                </div>\r\n                                <div className=\"knob-block text-center\">\r\n                                    <div >\r\n                                        <canvas width=\"65\" height=\"65\"></canvas>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                <div className={\"card-body pt-0\"}>\r\n                    <div className=\"apex-chart-container goal-status text-center row\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Dönemi</th>\r\n                                    <th scope=\"col\">Tarihi</th>\r\n                                    <th scope=\"col\">Miktarı</th>\r\n                                    <th scope=\"col\">Durumu</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {paid.map((item, index) => (\r\n                                    <tr key={index}>\r\n                                        <th scope=\"row\">{item.id}</th>\r\n                                        <td>{item.period}</td>\r\n                                        <td>{Moment(item.date).format('D.M.y')}</td>\r\n\r\n                                        <td>{item.quentity}</td>\r\n                                        <td><button\r\n                                            className={\"btn btn-danger\"}>Ödendi\r\n                                        </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default TransListView","import {fetcher} from \"../lib/fetcher\";\r\n\r\nexport const getEthToUsdtExchangeRate = async () => {\r\n    const response = await fetcher.get('https://ethereum-api.xyz/eth-prices');\r\n    return response.data\r\n}\r\nexport const getGasPrice = async () => {\r\n    const response=  await fetcher.get('https://ethereum-api.xyz/gas-prices');\r\n    return await response.data\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {fetcher} from \"../lib/fetcher\";\r\nimport {getGasPrice, getEthToUsdtExchangeRate} from \"../helpers/api\";\r\nimport {callBuyToken,\r\n    addTokenToWallet,\r\n    waitForReceipt,\r\n} from \"../helpers/web3\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initEvm, removeEvm} from \"../redux/actions/evmAction\";\r\n\r\nconst PrivateSale = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const evm =useSelector((state) => state.evmReducer.evm)\r\n    const asset =useSelector((state) => state.assetReducer.asset)\r\n    ///web3 Modal kurulumu\r\n    const [status, setStatus] = useState({\r\n        fetching:false,\r\n    });\r\n\r\n    const [transaction, setTransaction] = useState(false)\r\n    const [inputValue, setInputValue] = useState({\r\n        price:0.00,\r\n        mail : '',\r\n        name :'',\r\n        token: 0.00\r\n\r\n    });\r\n\r\n    /// güncel ethereum  gas bedelini getirme\r\n    const [gasPrice, setGasPrice] = useState({})\r\n    const [ethToUsdt, setEthToUsdt] = useState(0.00);\r\n    useEffect( async () => {\r\n        const gasPrice =await getGasPrice();\r\n        setGasPrice(gasPrice);\r\n        ///ethereumun güncel usdt kurunu getirme\r\n        const ethToUsdt=await getEthToUsdtExchangeRate()\r\n        setEthToUsdt(ethToUsdt) ;\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const tokenToCoin = () => {\r\n\r\n        const ethereumValue = parseFloat(asset.tokenBalance)\r\n    }\r\n    const coinToToken = () => {\r\n        const ethereumValue = parseFloat(asset.tokenBalance)\r\n    }\r\n\r\n    const buyToken = async () => {\r\n        const {price , name, mail} = inputValue\r\n        const {web3, address} = evm\r\n        let netEth = 0;\r\n        let ethResult = 0;\r\n        let exchangeRate = parseFloat(ethToUsdt)\r\n\r\n        //mail ve name alanı boş bırakmayınız\r\n        if (!name || !mail) {\r\n            Swal.fire({\r\n                    title: ['Hata'],\r\n                    html: ['Lüffen Email Adresi ve İsim Alanını  Boş Bırakmayınız'],\r\n                    icon: 'error',\r\n                }\r\n            )\r\n            return;\r\n        }\r\n\r\n        if ((isNaN(parseFloat(price)) && !isFinite(price)) || price == 0) {\r\n            Swal.fire({\r\n                title: ['Dikkat'],\r\n                html: ['Lütfen Geçerli Bir Değer Giriniz!'],\r\n                icon: 'error',\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (parseFloat(asset.ethBalance) <= parseFloat(price)) {\r\n            let ethGwei = parseFloat(gasPrice.fastest) * gasPrice / 1\r\n            console.log(ethGwei)\r\n            netEth = (parseFloat(asset.ethBalance) - ethGwei)\r\n\r\n            ethResult = exchangeRate * netEth\r\n            console.log(ethResult)\r\n            if (ethResult > 0) {\r\n                /* Swal.fire({\r\n                     title: ethResult.toFixed(2),\r\n                     html: ['Transfer Maliyeti Düştükten Sonra Alacağınız toplam CYCE miktarı'],\r\n                     icon: 'success',\r\n                     showConfirmButton: false,\r\n                     timer: 2000\r\n\r\n                 })*/\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    title: ['Dikkat'],\r\n                    html: ['İşlem yapmak için Bakiyeniz Yetersizdir.'],\r\n                    icon: 'error',\r\n                })\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            netEth = parseFloat(price)\r\n            ethResult = exchangeRate * netEth\r\n            /*Swal.fire({\r\n                    title: ethResult.toFixed(2),\r\n                    html: ['Alacağınız toplam CYCE miktarı'],\r\n                    icon: 'success',\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n\r\n                }\r\n            )*/\r\n        }\r\n\r\n        try {\r\n            setTransaction(true)\r\n            const wei = web3.utils.toWei(netEth.toString(), 'ether')\r\n            callBuyToken().on('transactionHash', function (hash) {\r\n                Swal.fire(\"Başarılı \", \"İşleminiz Başarılıdır<br/> CYCE Bakiyeniz <br/>\", \"success\")\r\n                waitForReceipt(hash, web3)\r\n\r\n            }).on('error', function (error) {\r\n                addTransaction('hata', 5);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n     //   await getAccountAssets();\r\n\r\n    }\r\n\r\n    const  addTransaction = (hash, type) => {\r\n        //     await fetcher.post('http://127.0.0.1:8000/transactions/customer/store', inputValue)\r\n        //  const response = await fetch('http://127.0.0.1:8000/transactions/customer/store', { body:JSON.stringify(inputValue) ,mode: 'cors', method:'post' });\r\n        //const {price, address, mail, name} = this.state\r\n        fetcher.post('/transactions/customer/store', inputValue)\r\n        /*$.ajax({\r\n            url: '/transactions/customer/store',\r\n            method: 'POST',\r\n            data: {quentity: price, type: type, address: address, description: mail, definition: name},\r\n            success: function (data) {\r\n                console.log(data)\r\n            }\r\n        })*/\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    }\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"card-header text-center\">\r\n                    <h4 className=\"font-primary\">{['Özel Satış(Private Sale)']} </h4>\r\n\r\n                    <div className={status.fetching ? \"loader-box \" : \"hidden\"}>\r\n                        <div className=\"loader-4\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className={status.fetching ? \"hidden\" : \"card-body\"}>\r\n                    <div className=\"row g-2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"page-title\">\r\n                                        <div className=\"row\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"card total-users\">\r\n                                        <div className=\"card-header card-no-border\">\r\n\r\n                                            <div className=\"card-header-right\">\r\n                                                <ul className=\"list-unstyled card-option\">\r\n                                                    <li><i className=\"fa fa-spin fa-cog\"></i></li>\r\n                                                    <li><i className=\"view-html fa fa-code\"></i></li>\r\n                                                    <li><i className=\"icofont icofont-maximize full-card\"></i></li>\r\n                                                    <li><i className=\"icofont icofont-minus minimize-card\"></i></li>\r\n                                                    <li><i className=\"icofont icofont-refresh reload-card\"></i></li>\r\n                                                    <li><i className=\"icofont icofont-error close-card\"></i></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"card-body pt-0\">\r\n                                            <div className=\"apex-chart-container goal-status text-center row\">\r\n\r\n                                                <div className=\"row\">\r\n                                                    <ul>\r\n                                                        <li className=\"mt-0 pt-0\">\r\n                                                            <h6 className=\"font-primary\">{['CYCE Dönüştürme']}   </h6>\r\n\r\n                                                        </li>\r\n\r\n                                                    </ul>\r\n                                                    <div className=\"mb-3 m-form__group col-md-12 text-center\">\r\n\r\n                                                        <br/>\r\n                                                        <strong>{['Cüzdan Numaranız:']} </strong>\r\n                                                        <span\r\n                                                            id=\"account\"></span><br/>\r\n                                                        <strong>{['CYCE Sözleşme Adresi:']}  </strong>\r\n                                                        <span>0xeadd9b69f96140283f9ff75da5fd33bcf54e6296</span>\r\n\r\n                                                        <ul>\r\n                                                            <li className=\"mt-0 pt-0\">\r\n                                                                <h6 className=\"font-primary\">{['Özel Satış(Private Sale)']}</h6>\r\n                                                                <h6 className=\"f-w-400\">{['28 Mayıs 2021']} </h6>\r\n                                                                {transaction ? <h1 className={'btun'} >\r\n                                                                    <a\r\n                                                                        className={transaction ? ' btn btn-warning' : ' hidden btn btn-warning'}\r\n                                                                    >\r\n                                                                        <i className={\"fa fa-spin fa-cog\"}></i> {['İşleminiz devam ediyor....']}\r\n                                                                    </a>\r\n\r\n                                                                </h1> :null}\r\n                                                            </li>\r\n\r\n                                                            <li>\r\n                                                                <p>\r\n                                                                    {['Lütfen almak istediğiniz CYCE miktarını girin(İşlem Ücretleri Mevcut Ethereum Bakiyenizden Düşecektir)']}\r\n\r\n                                                                </p>\r\n\r\n                                                                <div className=\"col-md-12 mb-3 d-flex\">\r\n                                                                    <input className={\"form-control\"} type=\"text\" placeholder={['Adınızı Giriniz..']}\r\n                                                                           name={\"name\"}\r\n                                                                           value={inputValue.name}\r\n                                                                           onChange={handleChange}\r\n                                                                           disabled={!evm}\r\n                                                                    ></input>\r\n                                                                    <input className={\"form-control\"} type=\"text\" placeholder={['Mail Adresinizi Giriniz..']}\r\n                                                                           name={\"mail\"}\r\n                                                                           value={inputValue.mail}\r\n                                                                           onChange={handleChange}\r\n                                                                           disabled={!evm}\r\n                                                                    ></input>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-12 mb-3 d-flex\">\r\n\r\n\r\n                                                                    <input className=\"form-control\" type=\"text\"\r\n                                                                           name={\"cyce\"}\r\n                                                                           onChange={handleChange}\r\n                                                                           value={inputValue.token}\r\n                                                                           onBlur={tokenToCoin}\r\n                                                                           placeholder={['Alacağınız CYCE Miktarı']}\r\n                                                                           disabled={!evm}\r\n                                                                    ></input>\r\n\r\n                                                                </div>\r\n                                                                <div className=\"col-md-12\">\r\n                                                                    <i className=\"fa fa-exchange\"\r\n                                                                       aria-hidden=\"true\"></i>\r\n                                                                </div>\r\n                                                                <br/>\r\n                                                                <div className=\"col-md-12\"\r\n                                                                >\r\n\r\n                                                                    <input className=\"form-control\" type=\"text\"\r\n                                                                           name={\"price\"}\r\n                                                                           disabled={!evm}\r\n                                                                           onChange={handleChange}\r\n                                                                           placeholder={['Ethereum Miktarını Giriniz.']}\r\n                                                                           onBlur={coinToToken}\r\n                                                                           value={inputValue.price}></input>\r\n                                                                    <br/>\r\n                                                                    {evm ==false ? null\r\n                                                                        :\r\n\r\n                                                                    <button\r\n                                                                        className={'btn'}\r\n\r\n                                                                        type=\"submit\" id=\"buyToken\" style={{\r\n                                                                        background: '#61a93e',\r\n                                                                        color: 'white',\r\n                                                                        width: '175px',\r\n                                                                    }}\r\n\r\n                                                                        onClick={buyToken}>{['CYCE Al']}\r\n                                                                    </button>\r\n                                                                    }\r\n\r\n                                                                </div>\r\n\r\n\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                        <div className=\"mb-3\">\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"mb-3 m-form__group col-md-12 text-center\">\r\n\r\n\r\n\r\n\r\n                                                    <div className=\"mb-3 m-form__group col-md-12 text-center\">\r\n\r\n\r\n                                                        { evm == false?  <button type=\"submit\" id=\"metaMaskConnect\"\r\n                                                                            style={{\r\n                                                                                background: '#f5841f',\r\n                                                                                color: 'white',\r\n                                                                                width: '175px',\r\n                                                                            }}\r\n                                                                            onClick={() =>  dispatch(initEvm())}>{['Cüzdana Bağlan']}\r\n                                                        </button>:<div>\r\n                                                            <h1 className=\"\">\r\n                                                                <a className={'btn btn-primary'}\r\n                                                                   onClick={() => {\r\n                                                                       setInputValue({...inputValue, price: asset.ethBalance});\r\n                                                                       coinToToken()\r\n                                                                   }}>{['Ethereum Bakiyeniz']} {parseFloat(asset.ethBalance).toFixed(6)}\r\n\r\n                                                                    <br/>{['Tüm Bakiyeniz İle CYCE Almak İçin Bu Butona Tıklayınız']}\r\n                                                                </a>\r\n                                                            </h1>\r\n\r\n                                                            <h1 className=\"\">\r\n                                                            <a\r\n                                                            className={!evm ? 'hidden btn btn-danger' : 'btn btn-danger'}\r\n\r\n                                                            onClick= {() => addTokenToWallet(evm.provider)}>{['CYCE Bakiyeniz']}: {asset.tokenBalance}<br/>\r\n                                                        {['Cüzdana Ekle']}\r\n                                                            </a>\r\n                                                            </h1>\r\n                                                            <button\r\n                                                            style={{\r\n                                                            background: '#f5841f',\r\n                                                            color: 'white',\r\n                                                            width: '175px',\r\n                                                        }}\r\n                                                            onClick={() => dispatch(removeEvm() )}>{['Bağlantıyı Kes']}\r\n                                                            </button>\r\n                                                            </div>}\r\n                                                        <br/>\r\n                                                        <br/>\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n                                                <div className=\"col-md-12 text-center\">\r\n                                                    <a href=\"https://cycecoin.com/\"\r\n                                                       className=\"btn btn-danger\">{['Siteye Geri Dön']}</a>\r\n                                                    <hr/>\r\n                                                    {!window.ethereum ?\r\n                                                        <a href=\"https://metamask.app.link/dapp/sale.cycecoin.com/\"\r\n                                                           target={\"_blank\"}\r\n                                                           className={ \"btn btn-warning\"}>{['Metamask ile bağlanmak için tıklayınız']}</a>\r\n                                                        : null\r\n                                                    }\r\n\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default PrivateSale","import {callTransfer, connectToEvm, watchTokenTransfers} from \"../helpers/web3\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initEvm, removeEvm} from \"../redux/actions/evmAction\";\r\nimport {initTransactions, updateTransaction} from \"../redux/actions/transactionAction\";\r\nimport AssetWidget from \"../component/AssetWidget\";\r\nimport {initTokens, selectToken} from \"../redux/actions/tokenAction\";\r\nimport {useParams} from \"react-router\";\r\nimport {initPowerStations, selectPowerStation} from \"../redux/actions/powerStationAction\";\r\nimport Moment from 'moment'\r\nconst TransList = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {id, address}= useParams();\r\n    const evm =useSelector((state) => state.evmReducer.evm)\r\n    const asset= useSelector((state) => state.assetReducer.asset)\r\n    const transactions = useSelector((state)=> state.transactionReducer.transactions)\r\n    const token = useSelector((state) => state.tokenReducer.token)\r\n\r\n    const [transferStatus, setTransferStatus] = useState({id:1, status:false});\r\n    const transfer = async (item) => {\r\n\r\n    setTransferStatus({id:item.id, status: true})\r\n        const id = toast.loading(\"Lütfen Bekleyiniz..\")\r\n//do something else\r\n\r\n       await  callTransfer(item).then(function (response){\r\n           dispatch(updateTransaction({...item, hash:response, status:1}))\r\n           setTransferStatus({id:item.id, status: true})\r\n           toast.update(id, { render: \"İşlem Başarılı\", type: \"success\", isLoading: false, autoClose:3000 });\r\n       }).catch(error => {\r\n\r\n           setTransferStatus({id:item.id, status: false})\r\n           toast.update(id, { render: \"İşlem İptal Edildi\", type: \"error\", isLoading: false, autoClose:3000, position:'top-left'  });\r\n        })\r\n    }\r\n    const [paid, setPaid] = useState([]);\r\n    const [unpaid, setUnpaid] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(selectPowerStation(id))\r\n        dispatch(initTransactions(address));\r\n        dispatch(selectToken(id))\r\n        return () => {\r\n            dispatch(initTransactions())\r\n        };\r\n    }, []);\r\n\r\n\r\n    const [totalUnpaid, setTotalUnpaid] = useState();\r\n    const [totalPaid, setTotalPaid] = useState();\r\n    const [totalTransaction, setTotalTransaction] = useState();\r\n    useEffect(() => {\r\n        const sum = transactions.map(item => parseFloat(item.quentity)).reduce(function(prev, current) {\r\n            return prev  + current\r\n        }, 0);\r\n        setPaid(transactions.filter(item => item.status==1))\r\n        setUnpaid(transactions.filter(item => item.status==0))\r\n        setTotalTransaction(sum)\r\n\r\n    }, [transactions]);\r\n    useEffect(() => {\r\n\r\n        const sumPaid = paid.map(item => parseFloat(item.quentity)).reduce(function(prev, current) {\r\n            return prev  + current\r\n        }, 0);\r\n        const sumUnPaid = unpaid.map(item => parseFloat(item.quentity)).reduce(function(prev, current) {\r\n            return prev  + current\r\n        }, 0);\r\n        setTotalUnpaid(sumUnPaid)\r\n        setTotalPaid(sumPaid)\r\n    }, [paid, unpaid]);\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer  />\r\n                                <div className=\"card-header\">\r\n\r\n                                    <h5>Santral</h5><span>Toplam Hakediş </span>\r\n                                    <h5>{totalTransaction} CYCE</h5>\r\n\r\n                                    {evm == false  ?\r\n                                        <button onClick={() =>  dispatch(initEvm())}\r\n                                                className={\"btn btn-primary\"}>Bağlan\r\n                                        </button> :\r\n                                        <button onClick={() => dispatch(removeEvm())}\r\n                                                className={\"btn btn-danger\"}>Bağlantıyı Kes\r\n                                        </button>\r\n                                    }\r\n\r\n                                </div>\r\n            <div className={\"row g-2\"}>\r\n                <div className=\"progress\">\r\n                    <div className=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\"\r\n                         aria-valuenow=\"75\" aria-valuemin=\"0\"\r\n                         aria-valuemax=\"100\" style={{width: paid.length/transactions.length*100+'%'}}></div>\r\n                </div>\r\n                <div className={\"col-md-6\"}>\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"media align-items-center\">\r\n                                <div className=\"media-body right-chart-content\">\r\n                                    <h4>{totalUnpaid} <span className=\"new-box\"> CYCE</span></h4>\r\n                                    <span>Toplam Ödenecek Miktar</span>\r\n                                </div>\r\n                                <div className=\"knob-block text-center\">\r\n                                    <div >\r\n                                        <canvas width=\"65\" height=\"65\"></canvas>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                                <div className={\"card-body pt-0\"}>\r\n                                    <div className=\"apex-chart-container goal-status text-center row\">\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">Dönemi</th>\r\n                                            <th scope=\"col\">Tarihi</th>\r\n                                            <th scope=\"col\">Miktarı</th>\r\n                                            <th scope=\"col\">Durumu</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {unpaid.map((item, index) => (\r\n                                        <tr key={index}>\r\n                                            <th scope=\"row\">{item.id}</th>\r\n                                            <td>{item.period}</td>\r\n                                            <td>{Moment(item.date).format('D.M.y')}</td>\r\n\r\n                                            <td>{item.quentity}</td>\r\n                                            <td>{Date.parse(item.date)<=Date.now() ?\r\n                                                evm == false ? <button\r\n                                                        className={\"btn btn-outline-primary\"}>Ödeme Aşamasında\r\n                                                    </button>\r\n                                                    : (transferStatus.id == item.id ? transferStatus.status : false) ?\r\n                                                    <button className={\"btn btn-default\"}>İşlem Devam\r\n                                                        Ediyor...</button> :\r\n                                                    <button onClick={() => transfer(item)}\r\n                                                            className={\"btn btn-primary\"}>Transfer\r\n                                                    </button>\r\n                                          : <button\r\n                                                    className={\"btn btn-outline-primary\"}>Süresi Gelmedi\r\n                                                </button>  }\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                </div>\r\n            </div>\r\n                <div className={\"col-md-6\"}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"media align-items-center\">\r\n                                <div className=\"media-body right-chart-content\">\r\n                                    <h4>{totalPaid}<span className=\"new-box\"> CYCE</span></h4>\r\n                                    <span>Toplam Ödenen Miktar</span>\r\n                                </div>\r\n                                <div className=\"knob-block text-center\">\r\n                                    <div >\r\n                                        <canvas width=\"65\" height=\"65\"></canvas>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                <div className={\"card-body pt-0\"}>\r\n                    <div className=\"apex-chart-container goal-status text-center row\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Dönemi</th>\r\n                                    <th scope=\"col\">Tarihi</th>\r\n                                    <th scope=\"col\">Miktarı</th>\r\n                                    <th scope=\"col\">Durumu</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {paid.map((item, index) => (\r\n                                    <tr key={index}>\r\n                                        <th scope=\"row\">{item.id}</th>\r\n                                        <td>{item.period}</td>\r\n                                        <td>{Moment(item.date).format('D.M.y')}</td>\r\n\r\n                                        <td>{item.quentity}</td>\r\n                                        <td><button\r\n                                            className={\"btn btn-danger\"}>Ödendi\r\n                                        </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default TransList","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./component/Home\";\r\nimport TransListView from \"./view/TransListView\";\r\nimport PrivateSale from \"./view/PrivateSale\";\r\nimport TransList from \"./view/TransList\";\r\nconst  Routes = () => {\r\n    return (\r\n    <Router>\r\n\r\n    <Switch>\r\n        <Route path={\"/react/private-sale\"} component={PrivateSale} exact></Route>\r\n        <Route path={\"/react/transfer-list/:id/:address\"} component={TransList}></Route>\r\n        <Route path={\"/react/transfer-view/:id/:address\"} component={TransListView}></Route>\r\n    </Switch>\r\n    </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default Routes","import logo from './logo.svg';\nimport './App.css';\n\n\n\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './assets/css/vendors/flag-icon.css'\n\nimport './assets/css/vendors/feather-icon.css'\n\nimport './assets/css/vendors/scrollbar.css'\n\nimport './assets/css/vendors/bootstrap.css'\n\nimport './assets/css/style.css'\n\n\nimport './assets/css/responsive.css'\nimport Home from \"./component/Home\";\nimport Routes from \"./Routes\";\nimport TransList from \"./view/TransList\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n        <Routes>\n\n\n        </Routes>\n    </Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport i18next from \"i18next\";\nimport common_tr from \"./translations/tr/common.json\";\nimport common_en from \"./translations/en/common.json\";\n\ni18next.init({\n    interpolation: { escapeValue: false },  // React already does escaping\n    lng: 'en',                              // language to use\n    resources: {\n        en: {\n            common: common_en               // 'common' is our custom namespace\n        },\n        de: {\n            common: common_tr\n        },\n    },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}